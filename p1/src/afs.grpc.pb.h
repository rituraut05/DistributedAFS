// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: afs.proto
#ifndef GRPC_afs_2eproto__INCLUDED
#define GRPC_afs_2eproto__INCLUDED

#include "afs.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace afs {

class FileSystemService final {
 public:
  static constexpr char const* service_full_name() {
    return "afs.FileSystemService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Ping(::grpc::ClientContext* context, const ::afs::PingMessage& request, ::afs::PingMessage* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::PingMessage>> AsyncPing(::grpc::ClientContext* context, const ::afs::PingMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::PingMessage>>(AsyncPingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::PingMessage>> PrepareAsyncPing(::grpc::ClientContext* context, const ::afs::PingMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::PingMessage>>(PrepareAsyncPingRaw(context, request, cq));
    }
    // BASIC
    // File operations
    virtual ::grpc::Status Fetch(::grpc::ClientContext* context, const ::afs::FetchRequest& request, ::afs::FetchResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::FetchResponse>> AsyncFetch(::grpc::ClientContext* context, const ::afs::FetchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::FetchResponse>>(AsyncFetchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::FetchResponse>> PrepareAsyncFetch(::grpc::ClientContext* context, const ::afs::FetchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::FetchResponse>>(PrepareAsyncFetchRaw(context, request, cq));
    }
    virtual ::grpc::Status Store(::grpc::ClientContext* context, const ::afs::StoreRequest& request, ::afs::StoreResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::StoreResponse>> AsyncStore(::grpc::ClientContext* context, const ::afs::StoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::StoreResponse>>(AsyncStoreRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::StoreResponse>> PrepareAsyncStore(::grpc::ClientContext* context, const ::afs::StoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::StoreResponse>>(PrepareAsyncStoreRaw(context, request, cq));
    }
    virtual ::grpc::Status Remove(::grpc::ClientContext* context, const ::afs::RemoveRequest& request, ::afs::RemoveResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveResponse>> AsyncRemove(::grpc::ClientContext* context, const ::afs::RemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveResponse>>(AsyncRemoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveResponse>> PrepareAsyncRemove(::grpc::ClientContext* context, const ::afs::RemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveResponse>>(PrepareAsyncRemoveRaw(context, request, cq));
    }
    // rpc Rename (RenameRequest) returns (RenameResponse) {}
    virtual ::grpc::Status Create(::grpc::ClientContext* context, const ::afs::CreateRequest& request, ::afs::CreateResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::CreateResponse>> AsyncCreate(::grpc::ClientContext* context, const ::afs::CreateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::CreateResponse>>(AsyncCreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::CreateResponse>> PrepareAsyncCreate(::grpc::ClientContext* context, const ::afs::CreateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::CreateResponse>>(PrepareAsyncCreateRaw(context, request, cq));
    }
    virtual ::grpc::Status Mknod(::grpc::ClientContext* context, const ::afs::MknodRequest& request, ::afs::MknodResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::MknodResponse>> AsyncMknod(::grpc::ClientContext* context, const ::afs::MknodRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::MknodResponse>>(AsyncMknodRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::MknodResponse>> PrepareAsyncMknod(::grpc::ClientContext* context, const ::afs::MknodRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::MknodResponse>>(PrepareAsyncMknodRaw(context, request, cq));
    }
    // Metadata operations
    virtual ::grpc::Status GetFileStat(::grpc::ClientContext* context, const ::afs::GetFileStatRequest& request, ::afs::GetFileStatResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::GetFileStatResponse>> AsyncGetFileStat(::grpc::ClientContext* context, const ::afs::GetFileStatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::GetFileStatResponse>>(AsyncGetFileStatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::GetFileStatResponse>> PrepareAsyncGetFileStat(::grpc::ClientContext* context, const ::afs::GetFileStatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::GetFileStatResponse>>(PrepareAsyncGetFileStatRaw(context, request, cq));
    }
    virtual ::grpc::Status TestAuth(::grpc::ClientContext* context, const ::afs::TestAuthRequest& request, ::afs::TestAuthResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::TestAuthResponse>> AsyncTestAuth(::grpc::ClientContext* context, const ::afs::TestAuthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::TestAuthResponse>>(AsyncTestAuthRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::TestAuthResponse>> PrepareAsyncTestAuth(::grpc::ClientContext* context, const ::afs::TestAuthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::TestAuthResponse>>(PrepareAsyncTestAuthRaw(context, request, cq));
    }
    // Directory operations
    virtual ::grpc::Status MakeDir(::grpc::ClientContext* context, const ::afs::MakeDirRequest& request, ::afs::MakeDirResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::MakeDirResponse>> AsyncMakeDir(::grpc::ClientContext* context, const ::afs::MakeDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::MakeDirResponse>>(AsyncMakeDirRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::MakeDirResponse>> PrepareAsyncMakeDir(::grpc::ClientContext* context, const ::afs::MakeDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::MakeDirResponse>>(PrepareAsyncMakeDirRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveDir(::grpc::ClientContext* context, const ::afs::RemoveDirRequest& request, ::afs::RemoveDirResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveDirResponse>> AsyncRemoveDir(::grpc::ClientContext* context, const ::afs::RemoveDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveDirResponse>>(AsyncRemoveDirRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveDirResponse>> PrepareAsyncRemoveDir(::grpc::ClientContext* context, const ::afs::RemoveDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveDirResponse>>(PrepareAsyncRemoveDirRaw(context, request, cq));
    }
    virtual ::grpc::Status ReadDir(::grpc::ClientContext* context, const ::afs::ListDirRequest& request, ::afs::ListDirResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::ListDirResponse>> AsyncReadDir(::grpc::ClientContext* context, const ::afs::ListDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::ListDirResponse>>(AsyncReadDirRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::ListDirResponse>> PrepareAsyncReadDir(::grpc::ClientContext* context, const ::afs::ListDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::afs::ListDirResponse>>(PrepareAsyncReadDirRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Ping(::grpc::ClientContext* context, const ::afs::PingMessage* request, ::afs::PingMessage* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Ping(::grpc::ClientContext* context, const ::afs::PingMessage* request, ::afs::PingMessage* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // BASIC
      // File operations
      virtual void Fetch(::grpc::ClientContext* context, const ::afs::FetchRequest* request, ::afs::FetchResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Fetch(::grpc::ClientContext* context, const ::afs::FetchRequest* request, ::afs::FetchResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Store(::grpc::ClientContext* context, const ::afs::StoreRequest* request, ::afs::StoreResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Store(::grpc::ClientContext* context, const ::afs::StoreRequest* request, ::afs::StoreResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Remove(::grpc::ClientContext* context, const ::afs::RemoveRequest* request, ::afs::RemoveResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Remove(::grpc::ClientContext* context, const ::afs::RemoveRequest* request, ::afs::RemoveResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // rpc Rename (RenameRequest) returns (RenameResponse) {}
      virtual void Create(::grpc::ClientContext* context, const ::afs::CreateRequest* request, ::afs::CreateResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Create(::grpc::ClientContext* context, const ::afs::CreateRequest* request, ::afs::CreateResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Mknod(::grpc::ClientContext* context, const ::afs::MknodRequest* request, ::afs::MknodResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Mknod(::grpc::ClientContext* context, const ::afs::MknodRequest* request, ::afs::MknodResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Metadata operations
      virtual void GetFileStat(::grpc::ClientContext* context, const ::afs::GetFileStatRequest* request, ::afs::GetFileStatResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFileStat(::grpc::ClientContext* context, const ::afs::GetFileStatRequest* request, ::afs::GetFileStatResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void TestAuth(::grpc::ClientContext* context, const ::afs::TestAuthRequest* request, ::afs::TestAuthResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TestAuth(::grpc::ClientContext* context, const ::afs::TestAuthRequest* request, ::afs::TestAuthResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Directory operations
      virtual void MakeDir(::grpc::ClientContext* context, const ::afs::MakeDirRequest* request, ::afs::MakeDirResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MakeDir(::grpc::ClientContext* context, const ::afs::MakeDirRequest* request, ::afs::MakeDirResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveDir(::grpc::ClientContext* context, const ::afs::RemoveDirRequest* request, ::afs::RemoveDirResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveDir(::grpc::ClientContext* context, const ::afs::RemoveDirRequest* request, ::afs::RemoveDirResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ReadDir(::grpc::ClientContext* context, const ::afs::ListDirRequest* request, ::afs::ListDirResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ReadDir(::grpc::ClientContext* context, const ::afs::ListDirRequest* request, ::afs::ListDirResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::PingMessage>* AsyncPingRaw(::grpc::ClientContext* context, const ::afs::PingMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::PingMessage>* PrepareAsyncPingRaw(::grpc::ClientContext* context, const ::afs::PingMessage& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::FetchResponse>* AsyncFetchRaw(::grpc::ClientContext* context, const ::afs::FetchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::FetchResponse>* PrepareAsyncFetchRaw(::grpc::ClientContext* context, const ::afs::FetchRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::StoreResponse>* AsyncStoreRaw(::grpc::ClientContext* context, const ::afs::StoreRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::StoreResponse>* PrepareAsyncStoreRaw(::grpc::ClientContext* context, const ::afs::StoreRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveResponse>* AsyncRemoveRaw(::grpc::ClientContext* context, const ::afs::RemoveRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveResponse>* PrepareAsyncRemoveRaw(::grpc::ClientContext* context, const ::afs::RemoveRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::CreateResponse>* AsyncCreateRaw(::grpc::ClientContext* context, const ::afs::CreateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::CreateResponse>* PrepareAsyncCreateRaw(::grpc::ClientContext* context, const ::afs::CreateRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::MknodResponse>* AsyncMknodRaw(::grpc::ClientContext* context, const ::afs::MknodRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::MknodResponse>* PrepareAsyncMknodRaw(::grpc::ClientContext* context, const ::afs::MknodRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::GetFileStatResponse>* AsyncGetFileStatRaw(::grpc::ClientContext* context, const ::afs::GetFileStatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::GetFileStatResponse>* PrepareAsyncGetFileStatRaw(::grpc::ClientContext* context, const ::afs::GetFileStatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::TestAuthResponse>* AsyncTestAuthRaw(::grpc::ClientContext* context, const ::afs::TestAuthRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::TestAuthResponse>* PrepareAsyncTestAuthRaw(::grpc::ClientContext* context, const ::afs::TestAuthRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::MakeDirResponse>* AsyncMakeDirRaw(::grpc::ClientContext* context, const ::afs::MakeDirRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::MakeDirResponse>* PrepareAsyncMakeDirRaw(::grpc::ClientContext* context, const ::afs::MakeDirRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveDirResponse>* AsyncRemoveDirRaw(::grpc::ClientContext* context, const ::afs::RemoveDirRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::RemoveDirResponse>* PrepareAsyncRemoveDirRaw(::grpc::ClientContext* context, const ::afs::RemoveDirRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::ListDirResponse>* AsyncReadDirRaw(::grpc::ClientContext* context, const ::afs::ListDirRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::afs::ListDirResponse>* PrepareAsyncReadDirRaw(::grpc::ClientContext* context, const ::afs::ListDirRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Ping(::grpc::ClientContext* context, const ::afs::PingMessage& request, ::afs::PingMessage* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::PingMessage>> AsyncPing(::grpc::ClientContext* context, const ::afs::PingMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::PingMessage>>(AsyncPingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::PingMessage>> PrepareAsyncPing(::grpc::ClientContext* context, const ::afs::PingMessage& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::PingMessage>>(PrepareAsyncPingRaw(context, request, cq));
    }
    ::grpc::Status Fetch(::grpc::ClientContext* context, const ::afs::FetchRequest& request, ::afs::FetchResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::FetchResponse>> AsyncFetch(::grpc::ClientContext* context, const ::afs::FetchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::FetchResponse>>(AsyncFetchRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::FetchResponse>> PrepareAsyncFetch(::grpc::ClientContext* context, const ::afs::FetchRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::FetchResponse>>(PrepareAsyncFetchRaw(context, request, cq));
    }
    ::grpc::Status Store(::grpc::ClientContext* context, const ::afs::StoreRequest& request, ::afs::StoreResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::StoreResponse>> AsyncStore(::grpc::ClientContext* context, const ::afs::StoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::StoreResponse>>(AsyncStoreRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::StoreResponse>> PrepareAsyncStore(::grpc::ClientContext* context, const ::afs::StoreRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::StoreResponse>>(PrepareAsyncStoreRaw(context, request, cq));
    }
    ::grpc::Status Remove(::grpc::ClientContext* context, const ::afs::RemoveRequest& request, ::afs::RemoveResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::RemoveResponse>> AsyncRemove(::grpc::ClientContext* context, const ::afs::RemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::RemoveResponse>>(AsyncRemoveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::RemoveResponse>> PrepareAsyncRemove(::grpc::ClientContext* context, const ::afs::RemoveRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::RemoveResponse>>(PrepareAsyncRemoveRaw(context, request, cq));
    }
    ::grpc::Status Create(::grpc::ClientContext* context, const ::afs::CreateRequest& request, ::afs::CreateResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::CreateResponse>> AsyncCreate(::grpc::ClientContext* context, const ::afs::CreateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::CreateResponse>>(AsyncCreateRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::CreateResponse>> PrepareAsyncCreate(::grpc::ClientContext* context, const ::afs::CreateRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::CreateResponse>>(PrepareAsyncCreateRaw(context, request, cq));
    }
    ::grpc::Status Mknod(::grpc::ClientContext* context, const ::afs::MknodRequest& request, ::afs::MknodResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::MknodResponse>> AsyncMknod(::grpc::ClientContext* context, const ::afs::MknodRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::MknodResponse>>(AsyncMknodRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::MknodResponse>> PrepareAsyncMknod(::grpc::ClientContext* context, const ::afs::MknodRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::MknodResponse>>(PrepareAsyncMknodRaw(context, request, cq));
    }
    ::grpc::Status GetFileStat(::grpc::ClientContext* context, const ::afs::GetFileStatRequest& request, ::afs::GetFileStatResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::GetFileStatResponse>> AsyncGetFileStat(::grpc::ClientContext* context, const ::afs::GetFileStatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::GetFileStatResponse>>(AsyncGetFileStatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::GetFileStatResponse>> PrepareAsyncGetFileStat(::grpc::ClientContext* context, const ::afs::GetFileStatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::GetFileStatResponse>>(PrepareAsyncGetFileStatRaw(context, request, cq));
    }
    ::grpc::Status TestAuth(::grpc::ClientContext* context, const ::afs::TestAuthRequest& request, ::afs::TestAuthResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::TestAuthResponse>> AsyncTestAuth(::grpc::ClientContext* context, const ::afs::TestAuthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::TestAuthResponse>>(AsyncTestAuthRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::TestAuthResponse>> PrepareAsyncTestAuth(::grpc::ClientContext* context, const ::afs::TestAuthRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::TestAuthResponse>>(PrepareAsyncTestAuthRaw(context, request, cq));
    }
    ::grpc::Status MakeDir(::grpc::ClientContext* context, const ::afs::MakeDirRequest& request, ::afs::MakeDirResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::MakeDirResponse>> AsyncMakeDir(::grpc::ClientContext* context, const ::afs::MakeDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::MakeDirResponse>>(AsyncMakeDirRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::MakeDirResponse>> PrepareAsyncMakeDir(::grpc::ClientContext* context, const ::afs::MakeDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::MakeDirResponse>>(PrepareAsyncMakeDirRaw(context, request, cq));
    }
    ::grpc::Status RemoveDir(::grpc::ClientContext* context, const ::afs::RemoveDirRequest& request, ::afs::RemoveDirResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::RemoveDirResponse>> AsyncRemoveDir(::grpc::ClientContext* context, const ::afs::RemoveDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::RemoveDirResponse>>(AsyncRemoveDirRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::RemoveDirResponse>> PrepareAsyncRemoveDir(::grpc::ClientContext* context, const ::afs::RemoveDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::RemoveDirResponse>>(PrepareAsyncRemoveDirRaw(context, request, cq));
    }
    ::grpc::Status ReadDir(::grpc::ClientContext* context, const ::afs::ListDirRequest& request, ::afs::ListDirResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::ListDirResponse>> AsyncReadDir(::grpc::ClientContext* context, const ::afs::ListDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::ListDirResponse>>(AsyncReadDirRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::ListDirResponse>> PrepareAsyncReadDir(::grpc::ClientContext* context, const ::afs::ListDirRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::afs::ListDirResponse>>(PrepareAsyncReadDirRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Ping(::grpc::ClientContext* context, const ::afs::PingMessage* request, ::afs::PingMessage* response, std::function<void(::grpc::Status)>) override;
      void Ping(::grpc::ClientContext* context, const ::afs::PingMessage* request, ::afs::PingMessage* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Fetch(::grpc::ClientContext* context, const ::afs::FetchRequest* request, ::afs::FetchResponse* response, std::function<void(::grpc::Status)>) override;
      void Fetch(::grpc::ClientContext* context, const ::afs::FetchRequest* request, ::afs::FetchResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Store(::grpc::ClientContext* context, const ::afs::StoreRequest* request, ::afs::StoreResponse* response, std::function<void(::grpc::Status)>) override;
      void Store(::grpc::ClientContext* context, const ::afs::StoreRequest* request, ::afs::StoreResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Remove(::grpc::ClientContext* context, const ::afs::RemoveRequest* request, ::afs::RemoveResponse* response, std::function<void(::grpc::Status)>) override;
      void Remove(::grpc::ClientContext* context, const ::afs::RemoveRequest* request, ::afs::RemoveResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Create(::grpc::ClientContext* context, const ::afs::CreateRequest* request, ::afs::CreateResponse* response, std::function<void(::grpc::Status)>) override;
      void Create(::grpc::ClientContext* context, const ::afs::CreateRequest* request, ::afs::CreateResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Mknod(::grpc::ClientContext* context, const ::afs::MknodRequest* request, ::afs::MknodResponse* response, std::function<void(::grpc::Status)>) override;
      void Mknod(::grpc::ClientContext* context, const ::afs::MknodRequest* request, ::afs::MknodResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFileStat(::grpc::ClientContext* context, const ::afs::GetFileStatRequest* request, ::afs::GetFileStatResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFileStat(::grpc::ClientContext* context, const ::afs::GetFileStatRequest* request, ::afs::GetFileStatResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void TestAuth(::grpc::ClientContext* context, const ::afs::TestAuthRequest* request, ::afs::TestAuthResponse* response, std::function<void(::grpc::Status)>) override;
      void TestAuth(::grpc::ClientContext* context, const ::afs::TestAuthRequest* request, ::afs::TestAuthResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MakeDir(::grpc::ClientContext* context, const ::afs::MakeDirRequest* request, ::afs::MakeDirResponse* response, std::function<void(::grpc::Status)>) override;
      void MakeDir(::grpc::ClientContext* context, const ::afs::MakeDirRequest* request, ::afs::MakeDirResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveDir(::grpc::ClientContext* context, const ::afs::RemoveDirRequest* request, ::afs::RemoveDirResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveDir(::grpc::ClientContext* context, const ::afs::RemoveDirRequest* request, ::afs::RemoveDirResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ReadDir(::grpc::ClientContext* context, const ::afs::ListDirRequest* request, ::afs::ListDirResponse* response, std::function<void(::grpc::Status)>) override;
      void ReadDir(::grpc::ClientContext* context, const ::afs::ListDirRequest* request, ::afs::ListDirResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::afs::PingMessage>* AsyncPingRaw(::grpc::ClientContext* context, const ::afs::PingMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::PingMessage>* PrepareAsyncPingRaw(::grpc::ClientContext* context, const ::afs::PingMessage& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::FetchResponse>* AsyncFetchRaw(::grpc::ClientContext* context, const ::afs::FetchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::FetchResponse>* PrepareAsyncFetchRaw(::grpc::ClientContext* context, const ::afs::FetchRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::StoreResponse>* AsyncStoreRaw(::grpc::ClientContext* context, const ::afs::StoreRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::StoreResponse>* PrepareAsyncStoreRaw(::grpc::ClientContext* context, const ::afs::StoreRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::RemoveResponse>* AsyncRemoveRaw(::grpc::ClientContext* context, const ::afs::RemoveRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::RemoveResponse>* PrepareAsyncRemoveRaw(::grpc::ClientContext* context, const ::afs::RemoveRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::CreateResponse>* AsyncCreateRaw(::grpc::ClientContext* context, const ::afs::CreateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::CreateResponse>* PrepareAsyncCreateRaw(::grpc::ClientContext* context, const ::afs::CreateRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::MknodResponse>* AsyncMknodRaw(::grpc::ClientContext* context, const ::afs::MknodRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::MknodResponse>* PrepareAsyncMknodRaw(::grpc::ClientContext* context, const ::afs::MknodRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::GetFileStatResponse>* AsyncGetFileStatRaw(::grpc::ClientContext* context, const ::afs::GetFileStatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::GetFileStatResponse>* PrepareAsyncGetFileStatRaw(::grpc::ClientContext* context, const ::afs::GetFileStatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::TestAuthResponse>* AsyncTestAuthRaw(::grpc::ClientContext* context, const ::afs::TestAuthRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::TestAuthResponse>* PrepareAsyncTestAuthRaw(::grpc::ClientContext* context, const ::afs::TestAuthRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::MakeDirResponse>* AsyncMakeDirRaw(::grpc::ClientContext* context, const ::afs::MakeDirRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::MakeDirResponse>* PrepareAsyncMakeDirRaw(::grpc::ClientContext* context, const ::afs::MakeDirRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::RemoveDirResponse>* AsyncRemoveDirRaw(::grpc::ClientContext* context, const ::afs::RemoveDirRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::RemoveDirResponse>* PrepareAsyncRemoveDirRaw(::grpc::ClientContext* context, const ::afs::RemoveDirRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::ListDirResponse>* AsyncReadDirRaw(::grpc::ClientContext* context, const ::afs::ListDirRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::afs::ListDirResponse>* PrepareAsyncReadDirRaw(::grpc::ClientContext* context, const ::afs::ListDirRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Ping_;
    const ::grpc::internal::RpcMethod rpcmethod_Fetch_;
    const ::grpc::internal::RpcMethod rpcmethod_Store_;
    const ::grpc::internal::RpcMethod rpcmethod_Remove_;
    const ::grpc::internal::RpcMethod rpcmethod_Create_;
    const ::grpc::internal::RpcMethod rpcmethod_Mknod_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFileStat_;
    const ::grpc::internal::RpcMethod rpcmethod_TestAuth_;
    const ::grpc::internal::RpcMethod rpcmethod_MakeDir_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveDir_;
    const ::grpc::internal::RpcMethod rpcmethod_ReadDir_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Ping(::grpc::ServerContext* context, const ::afs::PingMessage* request, ::afs::PingMessage* response);
    // BASIC
    // File operations
    virtual ::grpc::Status Fetch(::grpc::ServerContext* context, const ::afs::FetchRequest* request, ::afs::FetchResponse* response);
    virtual ::grpc::Status Store(::grpc::ServerContext* context, const ::afs::StoreRequest* request, ::afs::StoreResponse* response);
    virtual ::grpc::Status Remove(::grpc::ServerContext* context, const ::afs::RemoveRequest* request, ::afs::RemoveResponse* response);
    // rpc Rename (RenameRequest) returns (RenameResponse) {}
    virtual ::grpc::Status Create(::grpc::ServerContext* context, const ::afs::CreateRequest* request, ::afs::CreateResponse* response);
    virtual ::grpc::Status Mknod(::grpc::ServerContext* context, const ::afs::MknodRequest* request, ::afs::MknodResponse* response);
    // Metadata operations
    virtual ::grpc::Status GetFileStat(::grpc::ServerContext* context, const ::afs::GetFileStatRequest* request, ::afs::GetFileStatResponse* response);
    virtual ::grpc::Status TestAuth(::grpc::ServerContext* context, const ::afs::TestAuthRequest* request, ::afs::TestAuthResponse* response);
    // Directory operations
    virtual ::grpc::Status MakeDir(::grpc::ServerContext* context, const ::afs::MakeDirRequest* request, ::afs::MakeDirResponse* response);
    virtual ::grpc::Status RemoveDir(::grpc::ServerContext* context, const ::afs::RemoveDirRequest* request, ::afs::RemoveDirResponse* response);
    virtual ::grpc::Status ReadDir(::grpc::ServerContext* context, const ::afs::ListDirRequest* request, ::afs::ListDirResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Ping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Ping() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Ping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Ping(::grpc::ServerContext* /*context*/, const ::afs::PingMessage* /*request*/, ::afs::PingMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPing(::grpc::ServerContext* context, ::afs::PingMessage* request, ::grpc::ServerAsyncResponseWriter< ::afs::PingMessage>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Fetch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Fetch() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_Fetch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Fetch(::grpc::ServerContext* /*context*/, const ::afs::FetchRequest* /*request*/, ::afs::FetchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFetch(::grpc::ServerContext* context, ::afs::FetchRequest* request, ::grpc::ServerAsyncResponseWriter< ::afs::FetchResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Store : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Store() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_Store() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Store(::grpc::ServerContext* /*context*/, const ::afs::StoreRequest* /*request*/, ::afs::StoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStore(::grpc::ServerContext* context, ::afs::StoreRequest* request, ::grpc::ServerAsyncResponseWriter< ::afs::StoreResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Remove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Remove() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_Remove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Remove(::grpc::ServerContext* /*context*/, const ::afs::RemoveRequest* /*request*/, ::afs::RemoveResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemove(::grpc::ServerContext* context, ::afs::RemoveRequest* request, ::grpc::ServerAsyncResponseWriter< ::afs::RemoveResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Create() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::afs::CreateRequest* /*request*/, ::afs::CreateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreate(::grpc::ServerContext* context, ::afs::CreateRequest* request, ::grpc::ServerAsyncResponseWriter< ::afs::CreateResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Mknod : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Mknod() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_Mknod() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Mknod(::grpc::ServerContext* /*context*/, const ::afs::MknodRequest* /*request*/, ::afs::MknodResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMknod(::grpc::ServerContext* context, ::afs::MknodRequest* request, ::grpc::ServerAsyncResponseWriter< ::afs::MknodResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFileStat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFileStat() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetFileStat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileStat(::grpc::ServerContext* /*context*/, const ::afs::GetFileStatRequest* /*request*/, ::afs::GetFileStatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFileStat(::grpc::ServerContext* context, ::afs::GetFileStatRequest* request, ::grpc::ServerAsyncResponseWriter< ::afs::GetFileStatResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TestAuth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TestAuth() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_TestAuth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestAuth(::grpc::ServerContext* /*context*/, const ::afs::TestAuthRequest* /*request*/, ::afs::TestAuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestAuth(::grpc::ServerContext* context, ::afs::TestAuthRequest* request, ::grpc::ServerAsyncResponseWriter< ::afs::TestAuthResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MakeDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MakeDir() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_MakeDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MakeDir(::grpc::ServerContext* /*context*/, const ::afs::MakeDirRequest* /*request*/, ::afs::MakeDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMakeDir(::grpc::ServerContext* context, ::afs::MakeDirRequest* request, ::grpc::ServerAsyncResponseWriter< ::afs::MakeDirResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveDir() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_RemoveDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveDir(::grpc::ServerContext* /*context*/, const ::afs::RemoveDirRequest* /*request*/, ::afs::RemoveDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveDir(::grpc::ServerContext* context, ::afs::RemoveDirRequest* request, ::grpc::ServerAsyncResponseWriter< ::afs::RemoveDirResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReadDir() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::afs::ListDirRequest* /*request*/, ::afs::ListDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadDir(::grpc::ServerContext* context, ::afs::ListDirRequest* request, ::grpc::ServerAsyncResponseWriter< ::afs::ListDirResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Ping<WithAsyncMethod_Fetch<WithAsyncMethod_Store<WithAsyncMethod_Remove<WithAsyncMethod_Create<WithAsyncMethod_Mknod<WithAsyncMethod_GetFileStat<WithAsyncMethod_TestAuth<WithAsyncMethod_MakeDir<WithAsyncMethod_RemoveDir<WithAsyncMethod_ReadDir<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Ping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Ping() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::PingMessage, ::afs::PingMessage>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::PingMessage* request, ::afs::PingMessage* response) { return this->Ping(context, request, response); }));}
    void SetMessageAllocatorFor_Ping(
        ::grpc::MessageAllocator< ::afs::PingMessage, ::afs::PingMessage>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::PingMessage, ::afs::PingMessage>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Ping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Ping(::grpc::ServerContext* /*context*/, const ::afs::PingMessage* /*request*/, ::afs::PingMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Ping(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::PingMessage* /*request*/, ::afs::PingMessage* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Fetch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Fetch() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::FetchRequest, ::afs::FetchResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::FetchRequest* request, ::afs::FetchResponse* response) { return this->Fetch(context, request, response); }));}
    void SetMessageAllocatorFor_Fetch(
        ::grpc::MessageAllocator< ::afs::FetchRequest, ::afs::FetchResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::FetchRequest, ::afs::FetchResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Fetch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Fetch(::grpc::ServerContext* /*context*/, const ::afs::FetchRequest* /*request*/, ::afs::FetchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Fetch(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::FetchRequest* /*request*/, ::afs::FetchResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Store : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Store() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::StoreRequest, ::afs::StoreResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::StoreRequest* request, ::afs::StoreResponse* response) { return this->Store(context, request, response); }));}
    void SetMessageAllocatorFor_Store(
        ::grpc::MessageAllocator< ::afs::StoreRequest, ::afs::StoreResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::StoreRequest, ::afs::StoreResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Store() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Store(::grpc::ServerContext* /*context*/, const ::afs::StoreRequest* /*request*/, ::afs::StoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Store(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::StoreRequest* /*request*/, ::afs::StoreResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Remove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Remove() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::RemoveRequest, ::afs::RemoveResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::RemoveRequest* request, ::afs::RemoveResponse* response) { return this->Remove(context, request, response); }));}
    void SetMessageAllocatorFor_Remove(
        ::grpc::MessageAllocator< ::afs::RemoveRequest, ::afs::RemoveResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::RemoveRequest, ::afs::RemoveResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Remove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Remove(::grpc::ServerContext* /*context*/, const ::afs::RemoveRequest* /*request*/, ::afs::RemoveResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Remove(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::RemoveRequest* /*request*/, ::afs::RemoveResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Create() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::CreateRequest, ::afs::CreateResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::CreateRequest* request, ::afs::CreateResponse* response) { return this->Create(context, request, response); }));}
    void SetMessageAllocatorFor_Create(
        ::grpc::MessageAllocator< ::afs::CreateRequest, ::afs::CreateResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::CreateRequest, ::afs::CreateResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::afs::CreateRequest* /*request*/, ::afs::CreateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Create(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::CreateRequest* /*request*/, ::afs::CreateResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Mknod : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Mknod() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::MknodRequest, ::afs::MknodResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::MknodRequest* request, ::afs::MknodResponse* response) { return this->Mknod(context, request, response); }));}
    void SetMessageAllocatorFor_Mknod(
        ::grpc::MessageAllocator< ::afs::MknodRequest, ::afs::MknodResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::MknodRequest, ::afs::MknodResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Mknod() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Mknod(::grpc::ServerContext* /*context*/, const ::afs::MknodRequest* /*request*/, ::afs::MknodResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Mknod(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::MknodRequest* /*request*/, ::afs::MknodResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFileStat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFileStat() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::GetFileStatRequest, ::afs::GetFileStatResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::GetFileStatRequest* request, ::afs::GetFileStatResponse* response) { return this->GetFileStat(context, request, response); }));}
    void SetMessageAllocatorFor_GetFileStat(
        ::grpc::MessageAllocator< ::afs::GetFileStatRequest, ::afs::GetFileStatResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::GetFileStatRequest, ::afs::GetFileStatResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFileStat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileStat(::grpc::ServerContext* /*context*/, const ::afs::GetFileStatRequest* /*request*/, ::afs::GetFileStatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFileStat(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::GetFileStatRequest* /*request*/, ::afs::GetFileStatResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_TestAuth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_TestAuth() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::TestAuthRequest, ::afs::TestAuthResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::TestAuthRequest* request, ::afs::TestAuthResponse* response) { return this->TestAuth(context, request, response); }));}
    void SetMessageAllocatorFor_TestAuth(
        ::grpc::MessageAllocator< ::afs::TestAuthRequest, ::afs::TestAuthResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::TestAuthRequest, ::afs::TestAuthResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_TestAuth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestAuth(::grpc::ServerContext* /*context*/, const ::afs::TestAuthRequest* /*request*/, ::afs::TestAuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TestAuth(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::TestAuthRequest* /*request*/, ::afs::TestAuthResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MakeDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MakeDir() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::MakeDirRequest, ::afs::MakeDirResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::MakeDirRequest* request, ::afs::MakeDirResponse* response) { return this->MakeDir(context, request, response); }));}
    void SetMessageAllocatorFor_MakeDir(
        ::grpc::MessageAllocator< ::afs::MakeDirRequest, ::afs::MakeDirResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::MakeDirRequest, ::afs::MakeDirResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MakeDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MakeDir(::grpc::ServerContext* /*context*/, const ::afs::MakeDirRequest* /*request*/, ::afs::MakeDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MakeDir(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::MakeDirRequest* /*request*/, ::afs::MakeDirResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveDir() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::RemoveDirRequest, ::afs::RemoveDirResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::RemoveDirRequest* request, ::afs::RemoveDirResponse* response) { return this->RemoveDir(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveDir(
        ::grpc::MessageAllocator< ::afs::RemoveDirRequest, ::afs::RemoveDirResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::RemoveDirRequest, ::afs::RemoveDirResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveDir(::grpc::ServerContext* /*context*/, const ::afs::RemoveDirRequest* /*request*/, ::afs::RemoveDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveDir(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::RemoveDirRequest* /*request*/, ::afs::RemoveDirResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReadDir() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::afs::ListDirRequest, ::afs::ListDirResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::afs::ListDirRequest* request, ::afs::ListDirResponse* response) { return this->ReadDir(context, request, response); }));}
    void SetMessageAllocatorFor_ReadDir(
        ::grpc::MessageAllocator< ::afs::ListDirRequest, ::afs::ListDirResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::afs::ListDirRequest, ::afs::ListDirResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::afs::ListDirRequest* /*request*/, ::afs::ListDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReadDir(
      ::grpc::CallbackServerContext* /*context*/, const ::afs::ListDirRequest* /*request*/, ::afs::ListDirResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Ping<WithCallbackMethod_Fetch<WithCallbackMethod_Store<WithCallbackMethod_Remove<WithCallbackMethod_Create<WithCallbackMethod_Mknod<WithCallbackMethod_GetFileStat<WithCallbackMethod_TestAuth<WithCallbackMethod_MakeDir<WithCallbackMethod_RemoveDir<WithCallbackMethod_ReadDir<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Ping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Ping() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Ping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Ping(::grpc::ServerContext* /*context*/, const ::afs::PingMessage* /*request*/, ::afs::PingMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Fetch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Fetch() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_Fetch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Fetch(::grpc::ServerContext* /*context*/, const ::afs::FetchRequest* /*request*/, ::afs::FetchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Store : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Store() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_Store() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Store(::grpc::ServerContext* /*context*/, const ::afs::StoreRequest* /*request*/, ::afs::StoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Remove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Remove() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_Remove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Remove(::grpc::ServerContext* /*context*/, const ::afs::RemoveRequest* /*request*/, ::afs::RemoveResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Create() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::afs::CreateRequest* /*request*/, ::afs::CreateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Mknod : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Mknod() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_Mknod() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Mknod(::grpc::ServerContext* /*context*/, const ::afs::MknodRequest* /*request*/, ::afs::MknodResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFileStat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFileStat() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetFileStat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileStat(::grpc::ServerContext* /*context*/, const ::afs::GetFileStatRequest* /*request*/, ::afs::GetFileStatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TestAuth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TestAuth() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_TestAuth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestAuth(::grpc::ServerContext* /*context*/, const ::afs::TestAuthRequest* /*request*/, ::afs::TestAuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MakeDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MakeDir() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_MakeDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MakeDir(::grpc::ServerContext* /*context*/, const ::afs::MakeDirRequest* /*request*/, ::afs::MakeDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveDir() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_RemoveDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveDir(::grpc::ServerContext* /*context*/, const ::afs::RemoveDirRequest* /*request*/, ::afs::RemoveDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReadDir() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::afs::ListDirRequest* /*request*/, ::afs::ListDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Ping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Ping() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Ping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Ping(::grpc::ServerContext* /*context*/, const ::afs::PingMessage* /*request*/, ::afs::PingMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPing(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Fetch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Fetch() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_Fetch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Fetch(::grpc::ServerContext* /*context*/, const ::afs::FetchRequest* /*request*/, ::afs::FetchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFetch(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Store : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Store() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_Store() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Store(::grpc::ServerContext* /*context*/, const ::afs::StoreRequest* /*request*/, ::afs::StoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStore(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Remove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Remove() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_Remove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Remove(::grpc::ServerContext* /*context*/, const ::afs::RemoveRequest* /*request*/, ::afs::RemoveResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemove(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Create() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::afs::CreateRequest* /*request*/, ::afs::CreateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreate(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Mknod : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Mknod() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_Mknod() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Mknod(::grpc::ServerContext* /*context*/, const ::afs::MknodRequest* /*request*/, ::afs::MknodResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMknod(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFileStat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFileStat() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetFileStat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileStat(::grpc::ServerContext* /*context*/, const ::afs::GetFileStatRequest* /*request*/, ::afs::GetFileStatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFileStat(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TestAuth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TestAuth() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_TestAuth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestAuth(::grpc::ServerContext* /*context*/, const ::afs::TestAuthRequest* /*request*/, ::afs::TestAuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTestAuth(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MakeDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MakeDir() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_MakeDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MakeDir(::grpc::ServerContext* /*context*/, const ::afs::MakeDirRequest* /*request*/, ::afs::MakeDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMakeDir(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveDir() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_RemoveDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveDir(::grpc::ServerContext* /*context*/, const ::afs::RemoveDirRequest* /*request*/, ::afs::RemoveDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveDir(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReadDir() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::afs::ListDirRequest* /*request*/, ::afs::ListDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadDir(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Ping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Ping() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Ping(context, request, response); }));
    }
    ~WithRawCallbackMethod_Ping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Ping(::grpc::ServerContext* /*context*/, const ::afs::PingMessage* /*request*/, ::afs::PingMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Ping(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Fetch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Fetch() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Fetch(context, request, response); }));
    }
    ~WithRawCallbackMethod_Fetch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Fetch(::grpc::ServerContext* /*context*/, const ::afs::FetchRequest* /*request*/, ::afs::FetchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Fetch(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Store : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Store() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Store(context, request, response); }));
    }
    ~WithRawCallbackMethod_Store() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Store(::grpc::ServerContext* /*context*/, const ::afs::StoreRequest* /*request*/, ::afs::StoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Store(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Remove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Remove() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Remove(context, request, response); }));
    }
    ~WithRawCallbackMethod_Remove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Remove(::grpc::ServerContext* /*context*/, const ::afs::RemoveRequest* /*request*/, ::afs::RemoveResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Remove(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Create() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Create(context, request, response); }));
    }
    ~WithRawCallbackMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::afs::CreateRequest* /*request*/, ::afs::CreateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Create(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Mknod : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Mknod() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Mknod(context, request, response); }));
    }
    ~WithRawCallbackMethod_Mknod() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Mknod(::grpc::ServerContext* /*context*/, const ::afs::MknodRequest* /*request*/, ::afs::MknodResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Mknod(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFileStat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFileStat() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFileStat(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFileStat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileStat(::grpc::ServerContext* /*context*/, const ::afs::GetFileStatRequest* /*request*/, ::afs::GetFileStatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFileStat(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_TestAuth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_TestAuth() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TestAuth(context, request, response); }));
    }
    ~WithRawCallbackMethod_TestAuth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TestAuth(::grpc::ServerContext* /*context*/, const ::afs::TestAuthRequest* /*request*/, ::afs::TestAuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TestAuth(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MakeDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MakeDir() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MakeDir(context, request, response); }));
    }
    ~WithRawCallbackMethod_MakeDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MakeDir(::grpc::ServerContext* /*context*/, const ::afs::MakeDirRequest* /*request*/, ::afs::MakeDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MakeDir(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveDir() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveDir(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveDir(::grpc::ServerContext* /*context*/, const ::afs::RemoveDirRequest* /*request*/, ::afs::RemoveDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveDir(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReadDir() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReadDir(context, request, response); }));
    }
    ~WithRawCallbackMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::afs::ListDirRequest* /*request*/, ::afs::ListDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ReadDir(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Ping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Ping() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::PingMessage, ::afs::PingMessage>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::PingMessage, ::afs::PingMessage>* streamer) {
                       return this->StreamedPing(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Ping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Ping(::grpc::ServerContext* /*context*/, const ::afs::PingMessage* /*request*/, ::afs::PingMessage* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPing(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::PingMessage,::afs::PingMessage>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Fetch : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Fetch() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::FetchRequest, ::afs::FetchResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::FetchRequest, ::afs::FetchResponse>* streamer) {
                       return this->StreamedFetch(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Fetch() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Fetch(::grpc::ServerContext* /*context*/, const ::afs::FetchRequest* /*request*/, ::afs::FetchResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFetch(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::FetchRequest,::afs::FetchResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Store : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Store() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::StoreRequest, ::afs::StoreResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::StoreRequest, ::afs::StoreResponse>* streamer) {
                       return this->StreamedStore(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Store() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Store(::grpc::ServerContext* /*context*/, const ::afs::StoreRequest* /*request*/, ::afs::StoreResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedStore(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::StoreRequest,::afs::StoreResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Remove : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Remove() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::RemoveRequest, ::afs::RemoveResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::RemoveRequest, ::afs::RemoveResponse>* streamer) {
                       return this->StreamedRemove(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Remove() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Remove(::grpc::ServerContext* /*context*/, const ::afs::RemoveRequest* /*request*/, ::afs::RemoveResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemove(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::RemoveRequest,::afs::RemoveResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Create : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Create() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::CreateRequest, ::afs::CreateResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::CreateRequest, ::afs::CreateResponse>* streamer) {
                       return this->StreamedCreate(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Create() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Create(::grpc::ServerContext* /*context*/, const ::afs::CreateRequest* /*request*/, ::afs::CreateResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::CreateRequest,::afs::CreateResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Mknod : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Mknod() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::MknodRequest, ::afs::MknodResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::MknodRequest, ::afs::MknodResponse>* streamer) {
                       return this->StreamedMknod(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Mknod() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Mknod(::grpc::ServerContext* /*context*/, const ::afs::MknodRequest* /*request*/, ::afs::MknodResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMknod(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::MknodRequest,::afs::MknodResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFileStat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFileStat() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::GetFileStatRequest, ::afs::GetFileStatResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::GetFileStatRequest, ::afs::GetFileStatResponse>* streamer) {
                       return this->StreamedGetFileStat(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFileStat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFileStat(::grpc::ServerContext* /*context*/, const ::afs::GetFileStatRequest* /*request*/, ::afs::GetFileStatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFileStat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::GetFileStatRequest,::afs::GetFileStatResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TestAuth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TestAuth() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::TestAuthRequest, ::afs::TestAuthResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::TestAuthRequest, ::afs::TestAuthResponse>* streamer) {
                       return this->StreamedTestAuth(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TestAuth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TestAuth(::grpc::ServerContext* /*context*/, const ::afs::TestAuthRequest* /*request*/, ::afs::TestAuthResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTestAuth(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::TestAuthRequest,::afs::TestAuthResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MakeDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MakeDir() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::MakeDirRequest, ::afs::MakeDirResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::MakeDirRequest, ::afs::MakeDirResponse>* streamer) {
                       return this->StreamedMakeDir(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MakeDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MakeDir(::grpc::ServerContext* /*context*/, const ::afs::MakeDirRequest* /*request*/, ::afs::MakeDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMakeDir(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::MakeDirRequest,::afs::MakeDirResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveDir() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::RemoveDirRequest, ::afs::RemoveDirResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::RemoveDirRequest, ::afs::RemoveDirResponse>* streamer) {
                       return this->StreamedRemoveDir(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveDir(::grpc::ServerContext* /*context*/, const ::afs::RemoveDirRequest* /*request*/, ::afs::RemoveDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveDir(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::RemoveDirRequest,::afs::RemoveDirResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReadDir : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReadDir() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::afs::ListDirRequest, ::afs::ListDirResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::afs::ListDirRequest, ::afs::ListDirResponse>* streamer) {
                       return this->StreamedReadDir(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReadDir() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReadDir(::grpc::ServerContext* /*context*/, const ::afs::ListDirRequest* /*request*/, ::afs::ListDirResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReadDir(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::afs::ListDirRequest,::afs::ListDirResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Ping<WithStreamedUnaryMethod_Fetch<WithStreamedUnaryMethod_Store<WithStreamedUnaryMethod_Remove<WithStreamedUnaryMethod_Create<WithStreamedUnaryMethod_Mknod<WithStreamedUnaryMethod_GetFileStat<WithStreamedUnaryMethod_TestAuth<WithStreamedUnaryMethod_MakeDir<WithStreamedUnaryMethod_RemoveDir<WithStreamedUnaryMethod_ReadDir<Service > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Ping<WithStreamedUnaryMethod_Fetch<WithStreamedUnaryMethod_Store<WithStreamedUnaryMethod_Remove<WithStreamedUnaryMethod_Create<WithStreamedUnaryMethod_Mknod<WithStreamedUnaryMethod_GetFileStat<WithStreamedUnaryMethod_TestAuth<WithStreamedUnaryMethod_MakeDir<WithStreamedUnaryMethod_RemoveDir<WithStreamedUnaryMethod_ReadDir<Service > > > > > > > > > > > StreamedService;
};

}  // namespace afs


#endif  // GRPC_afs_2eproto__INCLUDED
